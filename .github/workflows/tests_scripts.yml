# documentation: https://help.github.com/en/articles/workflow-syntax-for-github-actions
name: Tests for scripts
on:
  push:
    paths:
      - create_directory_tarballs.sh
      - load_easybuild_module.sh
      - scripts/utils.sh
      - update_lmod_cache.sh

  pull_request:
    paths:
      - create_directory_tarballs.sh
      - load_easybuild_module.sh
      - scripts/utils.sh
      - update_lmod_cache.sh
permissions:
  contents: read # to fetch code (actions/checkout)
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: checkout
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0

    - name: test load_easybuild_module.sh script
      run: |
        # bind current directory into container as /software-layer
        export SINGULARITY_BIND="${PWD}:/software-layer"

        # can't test with EasyBuild versions older than v4.5.2 when using EESSI pilot 2023.06,
        # since Python in compat layer is Python 3.11.x;
        # testing with a single EasyBuild version takes a while in GitHub Actions, so stick to a single sensible version
        for EB_VERSION in '4.6.0'; do
          # Create script that uses load_easybuild_module.sh which we can run in compat layer environment
          # note: Be careful with single vs double quotes below!
          #       ${EB_VERSION} should be expanded, so use double quotes;
          #       For statements using variables that are only defined in the script, like ${EASYBUILD_INSTALLPATH},
          #       use single quotes to avoid expansion while creating the script.
          test_script="${PWD}/eb-${EB_VERSION}.sh"
          echo '#!/bin/bash' > ${test_script}
          # both $EB and $TMPDIR environment must be set, required by load_easybuild_module.sh script
          echo 'export EB="eb"' >> ${test_script}
          echo 'export TMPDIR=$(mktemp -d)' >> ${test_script}
          # set up environment to have utility functions in place that load_easybuild_module.sh script relies on,
          # along with $EESSI_* environment variables, and Lmod
          echo 'ls -l /software-layer/' >> ${test_script}
          echo 'source /software-layer/scripts/utils.sh' >> ${test_script}
          echo 'source /software-layer/init/eessi_environment_variables' >> ${test_script}
          echo 'source ${EPREFIX}/usr/share/Lmod/init/bash' >> ${test_script}
          # minimal configuration for EasyBuild so we can test installation aspect of load_easybuild_module.sh script
          echo "export EASYBUILD_INSTALLPATH=/tmp/eb-${EB_VERSION}" >> ${test_script}
          echo 'module use ${EASYBUILD_INSTALLPATH}/modules/all' >> ${test_script}
          echo '' >> ${test_script}
          echo "source /software-layer/load_easybuild_module.sh ${EB_VERSION}" >> ${test_script}
          echo 'module list' >> ${test_script}
          echo 'eb --version' >> ${test_script}

          chmod u+x ${test_script}

          # run wrapper script + capture & check output
          out="${PWD}/eb-${EB_VERSION}.out"
          pattern="^This is EasyBuild ${EB_VERSION} "
          grep "${pattern}" ${out} || (echo "Pattern '${pattern}' not found in output!" && exit 1)
        done
